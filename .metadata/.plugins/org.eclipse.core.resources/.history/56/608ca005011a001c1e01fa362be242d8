package paqueteAplicacion;
import java.io.*;
import java.util.ArrayList;

public class Inventario {

	private static int ultimoCodigo = 0;
	private static int ficheroInventario;
	private static ArrayList<Producto> ListaProductos;
	
	private Inventario() {
		
	}
	
	public static void initInventario() {
		if(ListaProductos == null) {
			ListaProductos = new ArrayList<Producto>();
		}
		if(ultimoCodigo < 0) {
			ultimoCodigo = 0;
		}
		if(ficheroInventario < 0) {
			ficheroInventario = 0;
		}
	}
	
	public static int getUltimoCodigo() {
		return ultimoCodigo;
	}
	
	public static void cargarProductos() throws IOException {
		initInventario();
		
		File ficheroProductos = new File("C:/DATOS/productos.txt");
		FileReader fichero = null;
		BufferedReader br = null;
		
		try {
			fichero = new FileReader(ficheroProductos);
			br = new BufferedReader(fichero);
			
			String linea;
			
			System.out.println("[[Cargando productos en el sistema...]]");
			
			while((linea = br.readLine()) != null) {
				String[] restos = linea.split(" ");
									
				if(restos[restos.length-1].contains("FrutaHortaliza")) {
					ListaProductos.add(new FrutaHortaliza(Integer.parseInt(restos[0]), restos[1], Double.parseDouble(restos[2]), Integer.parseInt(restos[3]), Double.parseDouble(restos[4]), restos[5], restos[6]));
					ultimoCodigo = Integer.parseInt(restos[0]);

				} else if(restos[restos.length-1].contains("Lacteo")) {
					ListaProductos.add(new Lacteo(Integer.parseInt(restos[0]), restos[1], Double.parseDouble(restos[2]), Integer.parseInt(restos[3]), Double.parseDouble(restos[4]), restos[5], restos[6]));
					ultimoCodigo = Integer.parseInt(restos[0]);

				} else if(restos[restos.length-1].contains("Bebida")) {
					ListaProductos.add(new Bebida(Integer.parseInt(restos[0]), restos[1], Double.parseDouble(restos[2]), Integer.parseInt(restos[3]), Double.parseDouble(restos[4]), restos[5], restos[6]));
					ultimoCodigo = Integer.parseInt(restos[0]);

				} else if(restos[restos.length-1].contains("Herramienta")) {
					ListaProductos.add(new Herramienta(Integer.parseInt(restos[0]), restos[1], Double.parseDouble(restos[2]), Integer.parseInt(restos[3]), Double.parseDouble(restos[4])));
					ultimoCodigo = Integer.parseInt(restos[0]);

				} else if(restos[restos.length-1].contains("Otros")) {
					ListaProductos.add(new Otros(Integer.parseInt(restos[0]), restos[1], Double.parseDouble(restos[2]), Integer.parseInt(restos[3]), Double.parseDouble(restos[4]), restos[5]));
					ultimoCodigo = Integer.parseInt(restos[0]);
				}
			}
			
			System.out.println("[[...Productos cargados en el inventario]]");
			
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Error en la lectura del archivo txt");
		} finally {
			fichero.close();
		}
	}
	
	public static void addNuevoProducto(Producto producto) {
		if(ListaProductos == null) {
			initInventario();
		}

		ListaProductos.add(producto);
		ultimoCodigo = producto.getCodigo();
		
	}
	
	public static void mostrarProductos() {
		if(ListaProductos == null) {
			System.out.println("La lista de productos est� vac�a");
			
		} else {
			System.out.println("**** Lista completa de productos catalogados ****");
			System.out.println("");

			for (int i = 0; i < ListaProductos.size(); i++) {
				/*if(ListaProductos.get(i) instanceof Perecedero) {
					
					if(ListaProductos.get(i) instanceof FrutaHortaliza) {
						System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Cantidad:" + ListaProductos.get(i).getCantidad() + "    Precio:" + ListaProductos.get(i).getPrecio() + "    (Producto perecedero:" + ((Perecedero) ListaProductos.get(i)).getFechaCad() +")" + "    Fruta de origen:" + ((FrutaHortaliza) ListaProductos.get(i)).getOrigen());
					
					} else if(ListaProductos.get(i) instanceof Lacteo) {
						System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Cantidad:" + ListaProductos.get(i).getCantidad() + "    Precio:" + ListaProductos.get(i).getPrecio() + "    (Producto perecedero:" + ((Perecedero) ListaProductos.get(i)).getFechaCad() +")" + "    Producto l�cteo:" + ((Lacteo) ListaProductos.get(i)).getLote());
				
					} else if(ListaProductos.get(i) instanceof Bebida) {
						System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Cantidad:" + ListaProductos.get(i).getCantidad() + "    Precio:" + ListaProductos.get(i).getPrecio() + "    (Producto perecedero:" + ((Perecedero) ListaProductos.get(i)).getFechaCad() +")" + "    Bebida de graduaci�n:" + ((Bebida) ListaProductos.get(i)).getGraduacion());
					}
					
				} else if (ListaProductos.get(i) instanceof NoPerecedero) {
					
					if(ListaProductos.get(i) instanceof Herramienta) {
						System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Cantidad:" + ListaProductos.get(i).getCantidad() + "    Precio:" + ListaProductos.get(i).getPrecio() + "    (Producto no perecedero)" + "    Herramienta");
					
					} else if(ListaProductos.get(i) instanceof Otros) {
						System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Cantidad:" + ListaProductos.get(i).getCantidad() + "    Precio:" + ListaProductos.get(i).getPrecio() + "    (Producto no perecedero)" + "    Producto de categor�a:" + ((Otros) ListaProductos.get(i)).getCategoria());

					}
				}*/

				ListaProductos.get(i).imprimir();
				//System.out.println("\n");
			}
		}
	}
	
	public static Producto getProducto(int codigo) {

		for (int i = 0; i < ListaProductos.size(); i++) {
			if(ListaProductos.get(i).getCodigo() == codigo) {
				return ListaProductos.get(i);
			}
		}

		return null;
	}
	
	public static void actualizarCantidad(int codigo, double cantidad) {
		for (int i = 0; i < ListaProductos.size(); i++) {
			if(ListaProductos.get(i).getCodigo() == codigo) {
				ListaProductos.get(i).setCantidad(codigo);
			}
		}
	}
	
	public static int tamano() {
		return ListaProductos.size();
	}
	
	public static void mostrarProductosEnviables() {
		if(ListaProductos == null) {
			System.out.println("La lista de productos est� vac�a");

		} else {
			System.out.println("**** Lista de productos enviables del cat�logo ****");
			System.out.println("");

			for (int i = 0; i < ListaProductos.size(); i++) {

				/*if (ListaProductos.get(i) instanceof Enviable) {

					if (ListaProductos.get(i) instanceof Perecedero) {

						if (ListaProductos.get(i) instanceof FrutaHortaliza) {

							if (((FrutaHortaliza) ListaProductos.get(i)).envioFragil()){
								System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Peso:" + ListaProductos.get(i).getPeso() + "    IVA (" + ListaProductos.get(i).getIVA() + "%)," + "    Tarifa de env�o:" + ((FrutaHortaliza) ListaProductos.get(i)).tarifaEnvio() + "    Producto fr�gil" + "    PRECIO-TOTAL:" + ((FrutaHortaliza) ListaProductos.get(i)).calcularPrecioEnvio());

							} else {
								System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Peso:" + ListaProductos.get(i).getPeso() + "    IVA (" + ListaProductos.get(i).getIVA() + "%)," + "    Tarifa de env�o:" + ((FrutaHortaliza) ListaProductos.get(i)).tarifaEnvio() + "    PRECIO-TOTAL:" + ((FrutaHortaliza) ListaProductos.get(i)).calcularPrecioEnvio());
							}

						} else if (ListaProductos.get(i) instanceof Lacteo) {

							if (((Lacteo) ListaProductos.get(i)).envioFragil()){
								System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Peso:" + ListaProductos.get(i).getPeso() + "    IVA (" + ListaProductos.get(i).getIVA() + "%)," + "    Tarifa de env�o:" + ((Lacteo) ListaProductos.get(i)).tarifaEnvio() + "    Producto fr�gil" + "    PRECIO-TOTAL:" + ((Lacteo) ListaProductos.get(i)).calcularPrecioEnvio());

							} else {
								System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Peso:" + ListaProductos.get(i).getPeso() + "    IVA (" + ListaProductos.get(i).getIVA() + "%)," + "    Tarifa de env�o:" + ((Lacteo) ListaProductos.get(i)).tarifaEnvio() + "    PRECIO-TOTAL:" + ((Lacteo) ListaProductos.get(i)).calcularPrecioEnvio());
							}

						} else if (ListaProductos.get(i) instanceof Bebida) {

							if (((Bebida) ListaProductos.get(i)).envioFragil()){
								System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Peso:" + ListaProductos.get(i).getPeso() + "    IVA (" + ListaProductos.get(i).getIVA() + "%)," + "    Tarifa de env�o:" + ((Bebida) ListaProductos.get(i)).tarifaEnvio() + "    Producto fr�gil" + "    PRECIO-TOTAL:" + ((Bebida) ListaProductos.get(i)).calcularPrecioEnvio());

							} else {
								System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Peso:" + ListaProductos.get(i).getPeso() + "    IVA (" + ListaProductos.get(i).getIVA() + "%)," + "    Tarifa de env�o:" + ((Bebida) ListaProductos.get(i)).tarifaEnvio() + "    PRECIO-TOTAL:" + ((Bebida) ListaProductos.get(i)).calcularPrecioEnvio());
							}
						}

					} else if (ListaProductos.get(i) instanceof NoPerecedero) {

						if (ListaProductos.get(i) instanceof Herramienta) {

							if (((Herramienta) ListaProductos.get(i)).envioFragil()){
								System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Peso:" + ListaProductos.get(i).getPeso() + "    IVA (" + ListaProductos.get(i).getIVA() + "%)," + "    Tarifa de env�o:" + ((Herramienta) ListaProductos.get(i)).tarifaEnvio() + "    Producto fr�gil" + "    PRECIO-TOTAL:" + ((Bebida) ListaProductos.get(i)).calcularPrecioEnvio());

							} else {
								System.out.println("ID:" + ListaProductos.get(i).getCodigo() + "    Nombre:" + ListaProductos.get(i).getNombre() + "    Peso:" + ListaProductos.get(i).getPeso() + "    IVA (" + ListaProductos.get(i).getIVA() + "%)," + "    Tarifa de env�o:" + ((Herramienta) ListaProductos.get(i)).tarifaEnvio() + "    PRECIO-TOTAL:" + ((Herramienta) ListaProductos.get(i)).calcularPrecioEnvio());
							}

						}
					}
				}*/

				ListaProductos.get(i).imprimir();
			}
		}
	}
	
	public static void eliminarProducto(int codigo) {
		for (int i = 0; i < ListaProductos.size(); i++) {
			if(ListaProductos.get(i).getCodigo() == codigo) {
				ListaProductos.remove(codigo);
			}
		}
	}
	
	public static void volcarProductos() {
		String ruta = "C:/DATOS/productos.txt";
		String ruta2 = "C:/DATOS/productos2.txt";
		String texto = "";

		try {
			File archivo = new File(ruta);
			File archivo2 = new File(ruta2);
			FileWriter fichero = null;

			if (archivo.exists() && archivo2.exists()){
				System.out.println("El fichero ya existe, preparado para sobreescribir");

			} else {
				System.out.println("El fichero no existe, se crear� uno nuevo ahora mismo");
			}

			fichero = new FileWriter(archivo);
			fichero2 = new FileWriter(archivo2);

			for (int i = 0; i < ListaProductos.size(); i++){
				texto += ListaProductos.get(i).volcar() + "\n" ;
			}

			fichero.write(texto);
			fichero2.write(texto);
			fichero.close();
			fichero2.close();

		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Error en la escritura del archivo txt");
		}
	}
}
